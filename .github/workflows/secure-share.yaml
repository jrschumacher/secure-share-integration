name: Secure Share Integration

on:
  issue_comment:
    types: [created]

# github.event.issue.number

env:
  CMD: /virtru
  CMD_REQ: request

jobs:
  issue_comment:
    name: Issue Comment
    if: ${{ startsWith(github.event.comment.body, '/virtru') }}
    runs-on: ubuntu-latest
    steps:
      - name: Virtru - Request data
        if: ${{ startsWith(github.event.comment.body, '/virtru request') }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Keep for debugging
            // console.log(context)

            const command = `${ process.env.CMD } ${ process.env.CMD_REQ }`

            const { actor, repository, payload: { comment } } = context
            const { number: issue_number, owner, repo } = context.issue
            console.log('Context', {
              actor, repository, comment
            })

            const baseUrl = 'https://secure.develop.virtru.com/secure-share'

            function createComment(body) {
              github.rest.issues.createComment({ issue_number, owner, repo, body })
            }

            try {
              const args = comment.body.substring(command.length).trim().split(' ')
              console.log('Args', args)

              if (args.length !== 2) {
                throw new Error('Invalid number of arguments')
              }
              const email = args[0]
              const toUsername = args[1]

              if (! /^(.+)@(.+)$/.test(email)) {
                console.error('Invalid email address', `'${email}'`)
                throw new Error('Invalid email address')
              }

              if (! /^@[a-zA-Z0-9_-]/.test(toUsername)) {
                throw new Error('Invalid github username')
              }

              const link = `${ baseUrl }/${ email }?ch=github&oid=${ repository.full_name }#${ issue_number }`

              // Success and failure messages
              createComment(`@${ toUsername } you have been asked to securely share data with ${ actor }. Please use this url ${ link }`)
            } catch(err) {
              createComment(
                `@${ actor } invalid use of command. Eg. \`${ command } <your-email> <their-github-username>\`\n\n` +
                '---\n' +
                '```\n' +
                `> ${ comment.body }\n\n` +
                `error: ${err.message}\n` +
                '```'
                
              )
            }